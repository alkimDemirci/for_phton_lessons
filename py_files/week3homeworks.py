# -*- coding: utf-8 -*-
"""Untitled72.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fVh-BMH2jTqRhUHI3V7dHH-nUmahL2Qf
"""

# Fibonacci numbers without recursion 

# To print n many fibonnaci numbers: 
def fibo_func(num):
  x = 0
  y = 1
  print(x)
  print(y)
  for elem in range(num):
    z = x + y
    print(z)
    x = y
    y = z

# To find nth fibonnaci number:
def fibo_num(num):
  x = 0
  y = 1
  for elem in range(num-2):
    z = x + y
    x = y
    y = z 
  print(z)

# Fibonacci numbers with recursion

# To find nth fibonnaci number:
def my_fib_num(num,x = 0,y = 1):
  if num == 1:
    return x
  elif num == 2:
    return y
  else:
    return my_fib_num(num - 1) + my_fib_num(num - 2)  

num = int(input("Please state which order of Fibonacci Numbers you want to find: "))
print(my_fib_num(num))

# Creating Matrix
import random as rnd 
def create_matrix(n_row,n_column):
  my_matrix = []
  for elem in range(n_row):                              # row = yatay column = düşey
    my_matrix.append([])
  for num in range(len(my_matrix)):
    for char in range(n_column):
      my_num = rnd.randint(0,100)
      my_matrix[num].append(my_num)
  return my_matrix  


# Return List Accordingly
def find_aver(my_matrix):
  my_list = []
  for i in range(len(my_matrix)):
    my_aver = int(sum(my_matrix[i])/len(my_matrix[i]))
    my_list.append(my_aver)
  return my_list

# Happy Numbers

# Check whether your number is Happy Number:
def check_my_happy_number(num):
  my_num = [] # list of integers
  for x in range(len(num)):
    my_num.append(int(num[x]))
  while i in range(100):
    if sum([x**2 for x in my_num]) == 1:
      print("Yes it is a Happy Number")
      break
    else:
      my_sum = sum([x**2 for x in my_num])
      my_num = []
      for y in range(len(str(my_sum))):
        my_num.append(int(str(my_sum)[y]))
  print("We assume that your number is not a Happy Number since we did not reach to 1 with 100 trials")

num = input("Please enter your number: ")
check_my_happy_number(num)